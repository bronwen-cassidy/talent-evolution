--------------------------------------------------------
--23/01/07
--------------------------------------------------------
CREATE TABLE HOME_PAGES
(ARENA_ID VARCHAR2(50),
DOMAIN_ID NUMBER(22),
PAGE_URL VARCHAR2(1024),
FILE_UPLOAD BLOB,
ID number(22) not null)
/


PROMPT Creating Table 'QUESTION_GROUPS'
CREATE TABLE QUESTION_GROUPS
 (QUE_DEF_MODEL_ID INTEGER NOT NULL
 ,LABEL VARCHAR2(2000)
 ,TITLE VARCHAR2(1000)
 ,DISPLAYABLE VARCHAR2(1) DEFAULT 'F'
 ,ID INTEGER NOT NULL
 )
/

PROMPT Creating Table 'QUESTION_LINE_ITEMS'
CREATE TABLE QUESTION_LINE_ITEMS
 (MULTI_QUESTION_ID INTEGER NOT NULL
 ,ID NUMBER NOT NULL
 ,LABEL VARCHAR2(2000)
 ,DYNAMIC VARCHAR2(1) DEFAULT 'F'
 )
/

CREATE TABLE QUESTIONS
 (ID NUMBER NOT NULL
 ,QUE_GROUP_ID NUMBER
 ,DA_ID NUMBER
 ,QUESTION_LINE_ITEM_ID NUMBER
 ,QUESTION_TYPE VARCHAR2(240)
 ,NARRATIVE VARCHAR2(2000)
 ,TITLE VARCHAR2(240)
 ,TARGET VARCHAR2(240)
 ,TEXT_ID VARCHAR2(240)
 ,LENGTH INTEGER DEFAULT 0
 ,LABEL_DISPLAYABLE VARCHAR2(1) DEFAULT 'T'
 )
/

PROMPT Creating Table 'MULTI_QUESTIONS'
CREATE TABLE MULTI_QUESTIONS
 (QUE_GROUP_ID INTEGER NOT NULL
 ,LABEL VARCHAR2(2000)
 ,ID INTEGER NOT NULL
 )
/

PROMPT Creating Table 'SECURITY_ATTRIBUTES'
CREATE TABLE SECURITY_ATTRIBUTES
 (ID INTEGER NOT NULL
  ,MANAGER_READ VARCHAR2(1) DEFAULT 'F'
  ,MANAGER_WRITE VARCHAR2(1) DEFAULT 'F'
  ,INDIVIDUAL_READ VARCHAR2(1) DEFAULT 'F'
  ,INDIVIDUAL_WRITE VARCHAR2(1) DEFAULT 'F'
  ,PUBLIC_READ VARCHAR2(1) DEFAULT 'F'
 )
/

PROMPT ADD PK 'SEC_ATTRS_PK' ON 'SECURITY_ATTRIBUTES'
ALTER TABLE SECURITY_ATTRIBUTES
 ADD (CONSTRAINT SEC_ATTRS_PK PRIMARY KEY
  (ID))
/

ALTER TABLE HOME_PAGES
 ADD (CONSTRAINT HP_PK PRIMARY KEY
  (ID))
/

ALTER TABLE HOME_PAGES
 ADD CONSTRAINT HP_MOD_FK_ID
 FOREIGN KEY (ARENA_ID)
 REFERENCES MODULES (ID)
/

ALTER TABLE HOME_PAGES
 ADD CONSTRAINT HP_DOM_FK_ID
 FOREIGN KEY (DOMAIN_ID)
 REFERENCES SECURITY_DOMAINS (ID)
/

ALTER TABLE QUESTION_GROUPS
 ADD (CONSTRAINT QGP_PK PRIMARY KEY
  (ID))
/

ALTER TABLE QUESTION_LINE_ITEMS
 ADD (CONSTRAINT QLM_PK PRIMARY KEY
  (ID))
/

ALTER TABLE MULTI_QUESTIONS
 ADD (CONSTRAINT MQN_PK PRIMARY KEY
  (ID))
/

ALTER TABLE QUESTIONS
 ADD (CONSTRAINT QUN_PK PRIMARY KEY
  (ID))
/

ALTER TABLE MULTI_QUESTIONS ADD (CONSTRAINT
 MQN_QGP_FK FOREIGN KEY
  (QUE_GROUP_ID) REFERENCES QUESTION_GROUPS
  (ID))
/

ALTER TABLE QUESTIONS ADD (CONSTRAINT
 QUN_QGP_FK FOREIGN KEY
  (QUE_GROUP_ID) REFERENCES QUESTION_GROUPS
  (ID))
/

ALTER TABLE QUESTIONS ADD (CONSTRAINT
 QUN_QLM_FK FOREIGN KEY
  (QUESTION_LINE_ITEM_ID) REFERENCES QUESTION_LINE_ITEMS
  (ID) ON DELETE CASCADE)
/

ALTER TABLE QUESTION_GROUPS ADD (CONSTRAINT
 QGP_QDL_FK FOREIGN KEY
  (QUE_DEF_MODEL_ID) REFERENCES QUE_DEFINITION_MODELS
  (QUE_DEF_ID))
/

ALTER TABLE QUESTION_LINE_ITEMS ADD (CONSTRAINT
 QLM_MQN_FK FOREIGN KEY
  (MULTI_QUESTION_ID) REFERENCES MULTI_QUESTIONS
  (ID))
/

ALTER TABLE QUESTIONS ADD (CONSTRAINT
 QUN_ZDT_FK FOREIGN KEY
  (DA_ID) REFERENCES DYNAMIC_ATTRIBUTES
  (ID) ON DELETE CASCADE)
/

PROMPT Creating Sequence 'SEC_ATTR_SQ'
CREATE SEQUENCE SEC_ATTR_SQ
 NOMAXVALUE
 NOMINVALUE
 NOCYCLE
/

PROMPT Creating Sequence 'QUE_MODEL_SQ'
CREATE SEQUENCE QUE_MODEL_SQ
 NOMAXVALUE
 NOMINVALUE
 NOCYCLE
/

PROMPT Creating Sequence 'HOMEPAGE_SQ'
CREATE SEQUENCE HOMEPAGE_SQ
 NOMAXVALUE
 NOMINVALUE
 NOCYCLE
/

PROMPT Updating Table 'NODE_ITEMS'
ALTER TABLE NODE_ITEMS ADD SECURITY_ID INTEGER;

PROMPT Adding foreign key for 'SECURITY_ATTRIBUTES'
ALTER TABLE NODE_ITEMS ADD (CONSTRAINT
  FK_SECURITY FOREIGN KEY (SECURITY_ID)
  REFERENCES SECURITY_ATTRIBUTES(ID))
/

PROMPT Populating Tables 'SECURITY_ATTRIBUTES' and 'NODE_ITEMS'
-- Sequence to update existing NODE_ITEM with security attributes depending on existing 'scope' attribute.
DECLARE
    cursor node_cur is SELECT * FROM NODE_ITEMS WHERE SECURITY_ID IS NULL;
    n_id number;
    n_row node_items%rowtype;
    BEGIN
        OPEN node_cur;
            LOOP
                FETCH node_cur into n_row;
                EXIT WHEN node_cur%notfound;
                IF n_row.scope = 'PUBLIC' THEN
                         INSERT INTO SECURITY_ATTRIBUTES (ID, INDIVIDUAL_READ, INDIVIDUAL_WRITE, MANAGER_READ, MANAGER_WRITE, PUBLIC_READ)values(SEC_ATTR_SQ.NEXTVAL,'T','T','T','T','T');
                ELSIF n_row.scope =  'PRIVATE' THEN
                         INSERT INTO SECURITY_ATTRIBUTES (ID, INDIVIDUAL_READ, INDIVIDUAL_WRITE, MANAGER_READ, MANAGER_WRITE, PUBLIC_READ)values(SEC_ATTR_SQ.NEXTVAL,'T','T','F','F','F');
                ELSIF n_row.scope = 'RESTRICTED' THEN
                        INSERT INTO SECURITY_ATTRIBUTES (ID, INDIVIDUAL_READ, INDIVIDUAL_WRITE, MANAGER_READ, MANAGER_WRITE, PUBLIC_READ)values(SEC_ATTR_SQ.NEXTVAL,'F','F','F','F','F');
                END IF;
                UPDATE NODE_ITEMS SET SECURITY_ID = SEC_ATTR_SQ.CURRVAL where ID = n_row.id;
            END LOOP;
        CLOSE node_cur;
    END;
/

-- add a temproary column
ALTER TABLE QUE_DEFINITION_MODELS ADD DEFINITION_BLOB_TEMP BLOB;

-- copy data from new to old
PROMPT UPDATING QUE_DEF_MODELS INFO
DECLARE
    cursor q_cur is SELECT * FROM QUE_DEFINITION_MODELS;
    n_row que_definition_models%rowtype;
    BEGIN
        OPEN q_cur;
            LOOP
                FETCH q_cur into n_row;
                EXIT WHEN q_cur%notfound;
                UPDATE QUE_DEFINITION_MODELS SET DEFINITION_BLOB_TEMP = n_row.definition_blob where que_def_id = n_row.que_def_id;
            END LOOP;
        CLOSE q_cur;
    END;
/

-- drop and recreate the old column
ALTER TABLE QUE_DEFINITION_MODELS DROP COLUMN DEFINITION_BLOB;
ALTER TABLE QUE_DEFINITION_MODELS ADD DEFINITION_BLOB BLOB;

-- COPY THE DATA BACK
PROMPT UPDATING QUE_DEF_MODELS INFO
DECLARE
    cursor q_cur is SELECT * FROM QUE_DEFINITION_MODELS;
    n_row que_definition_models%rowtype;
    BEGIN
        OPEN q_cur;
            LOOP
                FETCH q_cur into n_row;
                EXIT WHEN q_cur%notfound;
                UPDATE QUE_DEFINITION_MODELS SET DEFINITION_BLOB = n_row.definition_blob_temp where que_def_id = n_row.que_def_id;
            END LOOP;
        CLOSE q_cur;
    END;
/

-- drop the temp column
ALTER TABLE QUE_DEFINITION_MODELS DROP COLUMN DEFINITION_BLOB_TEMP;

update permits set url='/.*positiondocumentsearch.*.htm' where url like '%/positiondocumentsearch%';

alter table que_definitions drop column scope;

--commit;
