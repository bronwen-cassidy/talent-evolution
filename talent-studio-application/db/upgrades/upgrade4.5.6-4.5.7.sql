CREATE TABLE UPGRADE_STATUS
(
    DATE_EXECUTED DATE
    ,SCRIPT_VERSION VARCHAR2 (255)
    ,SCRIPT_LINE_NUMBER NUMBER
    ,COMMENTS VARCHAR2 (500)
)
/

PROMPT Creating Table 'DISPLAY_CONFIG_ROLES'
CREATE TABLE DISPLAY_CONFIG_ROLES
 (DISPLAY_CONFIG_ITEM_ID NUMBER NOT NULL
 ,ROLE_ID NUMBER NOT NULL
 )
/

INSERT INTO UPGRADE_STATUS (DATE_EXECUTED, SCRIPT_VERSION, SCRIPT_LINE_NUMBER, COMMENTS) VALUES(SYSDATE, 'upgrade4.5.6-4.5.7.sql', 11, 'Created Table DISPLAY_CONFIG_ROLES');

PROMPT Creating Primary Key on 'DISPLAY_CONFIG_ROLES'
ALTER TABLE DISPLAY_CONFIG_ROLES
 ADD (CONSTRAINT DC_ROLE_PK PRIMARY KEY
  (DISPLAY_CONFIG_ITEM_ID
  ,ROLE_ID))
/

PROMPT Creating Foreign Key on 'DISPLAY_CONFIG_ROLES'
ALTER TABLE DISPLAY_CONFIG_ROLES ADD (CONSTRAINT
 DC_DC_ROLE_1_FK FOREIGN KEY
  (DISPLAY_CONFIG_ITEM_ID) REFERENCES DISPLAY_CONFIG_ITEMS
  (ID))
/

PROMPT Creating Foreign Key on 'DISPLAY_CONFIG_ROLES'
ALTER TABLE DISPLAY_CONFIG_ROLES ADD (CONSTRAINT
 DC_RLE_ROL_FK FOREIGN KEY
  (ROLE_ID) REFERENCES ROLES
  (ID))
/

INSERT INTO UPGRADE_STATUS (DATE_EXECUTED, SCRIPT_VERSION, SCRIPT_LINE_NUMBER, COMMENTS) VALUES(SYSDATE, 'upgrade4.5.6-4.5.7.sql', 34, 'Foreign Key On DISPLAY_CONFIG_ROLES');

ALTER TABLE DISPLAY_CONFIG_ITEMS ADD ROLES_MODIFIABLE VARCHAR2(1) DEFAULT 'T';
UPDATE DISPLAY_CONFIG_ITEMS SET ROLES_MODIFIABLE='T';
UPDATE DISPLAY_CONFIG_ITEMS SET ROLES_MODIFIABLE='F' WHERE ID IN (-2, -1, -9, -8, -32, -20, -30, -31);

INSERT INTO UPGRADE_STATUS (DATE_EXECUTED, SCRIPT_VERSION, SCRIPT_LINE_NUMBER, COMMENTS) VALUES(SYSDATE, 'upgrade4.5.6-4.5.7.sql', 43, 'Altered and updated DISPLAY_CONFIG_ITEMS');

PROMPT Updating Table 'DISPLAY_CONFIG_ROLES'

DECLARE
cursor roles_cur IS SELECT ID FROM ROLES WHERE TYPE = 'AR';
cursor display_items_cur IS SELECT ID FROM DISPLAY_CONFIG_ITEMS;

l_roles roles.id%type;
l_configs display_config_items.id%type;

BEGIN
   OPEN display_items_cur;
    <<outer_loop>>
       LOOP
           FETCH display_items_cur into l_configs;
           EXIT WHEN display_items_cur%notfound;

           OPEN roles_cur;
            <<inner_loop>>
               LOOP
                   FETCH roles_cur INTO l_roles;
                   EXIT inner_loop WHEN roles_cur%notfound;
                   --dbms_output.put_line( 'config_id: ' || l_configs || ' role_id: ' || l_roles);
                   INSERT INTO DISPLAY_CONFIG_ROLES (DISPLAY_CONFIG_ITEM_ID, ROLE_ID) VALUES (l_configs, l_roles);
               END LOOP inner_loop;
           CLOSE roles_cur;

       END LOOP outer_loop;
   CLOSE display_items_cur;
END;
/

INSERT INTO UPGRADE_STATUS (DATE_EXECUTED, SCRIPT_VERSION, SCRIPT_LINE_NUMBER, COMMENTS) VALUES(SYSDATE, 'upgrade4.5.6-4.5.7.sql', 50, 'Stored Proc to update display_cofig_roles');

-- 02-07-07
alter table objective_sets add CORPORATE_OBJECTIVE_ID NUMBER;

ALTER TABLE OBJECTIVE_SETS ADD (CONSTRAINT
 OBJ_SETS_CORP_FK FOREIGN KEY
  (CORPORATE_OBJECTIVE_ID) REFERENCES OBJECTIVE_SETS
  (ID))
/

INSERT INTO UPGRADE_STATUS (DATE_EXECUTED, SCRIPT_VERSION, SCRIPT_LINE_NUMBER, COMMENTS) VALUES(SYSDATE, 'upgrade4.5.6-4.5.7.sql', 83, 'Adding Corporate objective id column to objective sets');
