========================= linux tricks ========================================
secure copy
---------------------------
scp distribution_5.2.8.tar oracle@10.83.110.118:
 
tar a directory
------------------------------

tar -cvzf backup.tgz directory
c = create, v = verbose, z = compress with GZIP, f = archive name

This creates a "tarball" of the directory which can be extracted by 
replacing the "c" in the above command with "x" (for extract) and leaving off the directory name.
 
untar 
-------------
tar -xvzf file.tgz

gunzip distribution_5.2.9.tgz

tar -xvvf distribution_5.2.9.tar
 
linux commands URL
----------------------
http://www.wallpaperama.com/disp-post26.html

 
connect an x-windows session
------------------------------

type: startx   or startxwin (better)
export DISPLAY=127.0.0.1:0.0
then: xhost +
then: ssh -X <username>@<ipaddress>


-- older stuff
xinit -- -clipboard    [this will open an x-windows screen]
then type xhost +     [enables the remote console to connect to your pc]
then type ssh –X wlsdamin@ipaddress

iptables redirect
------------------------------------------------------------------------------
-A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8080
-A PREROUTING -p tcp -m tcp --dport 443 -j REDIRECT --to-ports 8443

iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443

// if there is an iptables file it will be in /etc/sysconfig/iptables

find
--------------------------------------------------
find / -iname httpd.conf


Disk space usage
------------------------------------------
df -h


------------------------------------------
-- truncate a file
cat /dev/null > some_log_file.log

====================================================
cron jobs
------------------------------------------------------
You must use crontab to load cron jobs into cron. First create a text file that uses the above rule to describe the cron job that you want to load into cron. But before you load it, type crontab -l to list any jobs that are currently loaded in crontab.

If none are listed, then it is safe to load your job. Example. If you wanted to run /usr/local/bin/foo once a day at 3:10am, then create a text file

10 3 * * * /usr/bin/foo
Save it as foo.cron. Then type crontab foo.cron. Check to see if it was loaded by typing crontab -l. It should display something like this:

# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (ipwatch.cron installed on Thu Nov 18 11:48:02 1999)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
10 3 * * * /usr/bin/foo
If you want to edit the cron job, then edit foo.cron and then remove the existing cron job (crontab -r) and load it again (crontab foo.cron). You can have multiple jobs. Just put each different one on a seperate line in foo.cron.

contab jobs will run under the user that was in effect when you loaded the job in crontab.
