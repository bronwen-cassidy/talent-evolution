<?xml version='1.0' encoding='UTF-8'?>
<dataset>

    <CORE_DETAILS ID="-32" FIRST_NAME="Peter" TITLE="Mr" PREF_GIVEN_NAME="Peter Sellers" SECOND_NAME="Sellers"/>
    <CORE_DETAILS ID="-33" FIRST_NAME="Daniel" TITLE="Mr" PREF_GIVEN_NAME="Danny" SECOND_NAME="Deronda"/>
    <CORE_DETAILS ID="-34" FIRST_NAME="Jane" TITLE="Miss" PREF_GIVEN_NAME="Janey" SECOND_NAME="Eyre"/>
    <CORE_DETAILS ID="-35" FIRST_NAME="Agatha" TITLE="Miss" PREF_GIVEN_NAME="Agatha Christie" SECOND_NAME="Christie"/>

    <USERS CD_ID="-33" ID="-133" USER_TYPE="SYSTEMSUBJECT" IS_ACTIVE="T" IS_ROOT="F"/>
    <USERS CD_ID="-34" ID="-134" USER_TYPE="SYSTEMSUBJECT" IS_ACTIVE="T" IS_ROOT="F"/>
    <USERS CD_ID="-35" ID="-135" USER_TYPE="SYSTEMSUBJECT" IS_ACTIVE="T" IS_ROOT="F"/>
    <USERS CD_ID="-32" ID="-132" USER_TYPE="SYSTEMSUBJECT" IS_ACTIVE="T" IS_ROOT="F"/>

    <!-- Marketing is inactive -->
    <NODES ID="-22" NODE_TYPE="O" IS_ACTIVE="T"/>
    <NODES ID="-23" NODE_TYPE="O" IS_ACTIVE="T"/>
    <NODES ID="-24" NODE_TYPE="O" IS_ACTIVE="T"/>
    <NODES ID="-25" NODE_TYPE="O" IS_ACTIVE="T"/>
    <NODES ID="-9" NODE_TYPE="O" IS_ACTIVE="T"/>
    <NODES ID="-10" NODE_TYPE="O" IS_ACTIVE="T"/>

    <!-- Head of Marketing is inactive -->
    <NODES ID="-6" NODE_TYPE="P" IS_ACTIVE="T"/>
    <NODES ID="-7" NODE_TYPE="P" IS_ACTIVE="T"/>
    <NODES ID="-8" NODE_TYPE="P" IS_ACTIVE="T"/>
    <NODES ID="-11" NODE_TYPE="P" IS_ACTIVE="T"/>

    <NODES ID="-32" NODE_TYPE="S" IS_ACTIVE="T"/>
    <NODES ID="-33" NODE_TYPE="S" IS_ACTIVE="T"/>
    <NODES ID="-34" NODE_TYPE="S" IS_ACTIVE="T"/>
    <NODES ID="-35" NODE_TYPE="S" IS_ACTIVE="T"/>

    <NODES ID="13" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="17" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="2" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="3" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="4" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="5" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="6" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="7" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="8" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="9" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="12" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="15" NODE_TYPE="OBJ" COMMENTS="Happy 1" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="14" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="16" NODE_TYPE="OBJ" COMMENTS="Happy 2" IS_ACTIVE="T" LOCK_ID="-1"/>
    <NODES ID="18" NODE_TYPE="OBJ" COMMENTS="[NULL]" IS_ACTIVE="T" LOCK_ID="-1"/>

    <LOGINS USER_ID="-132" USERNAME="peter" PASSWORD="8A65E0E80532B5FA" EXPIRES="2016-04-30" LOCKED="F" FORCE_PWD_CHANGE="F"/>
    <LOGINS USER_ID="-133" USERNAME="daniel" PASSWORD="8A65E0E80532B5FA" EXPIRES="2016-04-30" LOCKED="F" FORCE_PWD_CHANGE="F"/>
    <LOGINS USER_ID="-134" USERNAME="janey" PASSWORD="8A65E0E80532B5FA" EXPIRES="2016-04-30" LOCKED="F" FORCE_PWD_CHANGE="F"/>
    <LOGINS USER_ID="-135" USERNAME="agatha" PASSWORD="8A65E0E80532B5FA" EXPIRES="2023-04-30" LOCKED="F" FORCE_PWD_CHANGE="F"/>

    <SUBJECTS CD_ID="-32" NODE_ID="-32" USER_ID="-132"/>
    <SUBJECTS CD_ID="-33" NODE_ID="-33" USER_ID="-133"/>
    <SUBJECTS CD_ID="-34" NODE_ID="-34" USER_ID="-134"/>
    <SUBJECTS CD_ID="-35" NODE_ID="-35" USER_ID="-135"/>

    <ORGANIZATION_UNITS NODE_ID="-22" PARENT_ID="0" LABEL="Marketing"/>
    <ORGANIZATION_UNITS NODE_ID="-23" PARENT_ID="0" LABEL="Accounts"/>
    <ORGANIZATION_UNITS NODE_ID="-24" PARENT_ID="0" LABEL="IT"/>
    <ORGANIZATION_UNITS NODE_ID="-25" PARENT_ID="-24" LABEL="Engineering"/>
    <ORGANIZATION_UNITS NODE_ID="-10" PARENT_ID="-25" LABEL="Development"/>
    <ORGANIZATION_UNITS NODE_ID="-9" PARENT_ID="-10" LABEL="Java"/>

    <POSITIONS NODE_ID="-6" PARENT_ID="1" ORG_UNIT_ID="-22" TITLE="Head Of Marketing"/>
    <POSITIONS NODE_ID="-7" PARENT_ID="1" ORG_UNIT_ID="-23" TITLE="Head Of Accounts"/>
    <POSITIONS NODE_ID="-8" PARENT_ID="1" ORG_UNIT_ID="-24" TITLE="Head of IT"/>
    <POSITIONS NODE_ID="-11" PARENT_ID="-8" ORG_UNIT_ID="-25" TITLE="Head of Engineering"/>

    <POSITION_ASSOCIATIONS ID="-43" SOURCE_ID="-6" TARGET_ID="1" VALUE_ID="19"/>
    <POSITION_ASSOCIATIONS ID="-44" SOURCE_ID="-6" TARGET_ID="-7" VALUE_ID="21"/>
    <POSITION_ASSOCIATIONS ID="-45" SOURCE_ID="-7" TARGET_ID="1" VALUE_ID="19"/>
    <POSITION_ASSOCIATIONS ID="-46" SOURCE_ID="-8" TARGET_ID="1" VALUE_ID="19"/>
    <POSITION_ASSOCIATIONS ID="-47" SOURCE_ID="-11" TARGET_ID="-8" VALUE_ID="19"/>

    <SUBJECT_ASSOCIATIONS VALUE_ID="399" ID="-159" POSITION_ID="1" SUBJECT_ID="-32"/>
    <SUBJECT_ASSOCIATIONS VALUE_ID="399" ID="-160" POSITION_ID="-6" SUBJECT_ID="-33"/>
    <SUBJECT_ASSOCIATIONS VALUE_ID="402" ID="-162" POSITION_ID="-7" SUBJECT_ID="-34"/>
    <SUBJECT_ASSOCIATIONS VALUE_ID="402" ID="-12" POSITION_ID="-8" SUBJECT_ID="-35"/>

    <OBJECTIVE_SETS ID="1" TYPE="CORPORATE" OBJ_DEF_ID="-1" SUBJECT_ID="[NULL]" ORG_UNIT_ID="[NULL]" IS_APPROVED="F" LABEL="2008" PUBLISHED_DATE="2008-05-02 15:07:09.0" STATUS="PUBLISHED" EXPIRY_DATE="2009-05-04 00:00:00.0" LAST_MODIFIED_DATE="[NULL]" ACTION_REQUIRED="NO_ACTION" ACTION_GROUP="UNASSIGNED" CORPORATE_OBJECTIVE_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="2" TYPE="CORPORATE" OBJ_DEF_ID="-1" SUBJECT_ID="[NULL]" ORG_UNIT_ID="[NULL]" IS_APPROVED="F" LABEL="2009" PUBLISHED_DATE="[NULL]" STATUS="OPEN" EXPIRY_DATE="2010-05-03 00:00:00.0" LAST_MODIFIED_DATE="[NULL]" ACTION_REQUIRED="NO_ACTION" ACTION_GROUP="UNASSIGNED" CORPORATE_OBJECTIVE_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="4" TYPE="ORGUNIT" OBJ_DEF_ID="-1" SUBJECT_ID="[NULL]" ORG_UNIT_ID="-23" IS_APPROVED="F" LABEL="Accounts BU 1" PUBLISHED_DATE="[NULL]" STATUS="PENDING" EXPIRY_DATE="[NULL]" LAST_MODIFIED_DATE="2008-05-02 15:51:05.0" ACTION_REQUIRED="APPROVE" ACTION_GROUP="MANAGER" CORPORATE_OBJECTIVE_ID="1" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="7" TYPE="ORGUNIT" OBJ_DEF_ID="-1" SUBJECT_ID="[NULL]" ORG_UNIT_ID="-24" IS_APPROVED="T" LABEL="IT 2008 Goals" PUBLISHED_DATE="[NULL]" STATUS="APPROVED" EXPIRY_DATE="[NULL]" LAST_MODIFIED_DATE="2008-05-06 10:08:38.0" ACTION_REQUIRED="APPROVE" ACTION_GROUP="MANAGER" CORPORATE_OBJECTIVE_ID="1" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="3" TYPE="ORGUNIT" OBJ_DEF_ID="-1" SUBJECT_ID="[NULL]" ORG_UNIT_ID="0" IS_APPROVED="F" LABEL="Default ObjectiveSet 2008" PUBLISHED_DATE="[NULL]" STATUS="PENDING" EXPIRY_DATE="[NULL]" LAST_MODIFIED_DATE="2008-05-02 15:41:23.0" ACTION_REQUIRED="APPROVE" ACTION_GROUP="MANAGER" CORPORATE_OBJECTIVE_ID="1" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="5" TYPE="ORGUNIT" OBJ_DEF_ID="-1" SUBJECT_ID="[NULL]" ORG_UNIT_ID="-22" IS_APPROVED="T" LABEL="Marketing 2008 Goals" PUBLISHED_DATE="[NULL]" STATUS="APPROVED" EXPIRY_DATE="[NULL]" LAST_MODIFIED_DATE="2008-05-02 15:53:21.0" ACTION_REQUIRED="APPROVE" ACTION_GROUP="MANAGER" CORPORATE_OBJECTIVE_ID="1" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="6" TYPE="USER" OBJ_DEF_ID="-1" SUBJECT_ID="-33" ORG_UNIT_ID="[NULL]" IS_APPROVED="T" LABEL="2008" PUBLISHED_DATE="2008-05-06 09:56:30.0" STATUS="APPROVED" EXPIRY_DATE="[NULL]" LAST_MODIFIED_DATE="2008-05-06 09:59:43.0" ACTION_REQUIRED="APPROVE" ACTION_GROUP="MANAGER" CORPORATE_OBJECTIVE_ID="1" APPEAR_TODO="F"/>
    <OBJECTIVE_SETS ID="8" TYPE="USER" OBJ_DEF_ID="-1" SUBJECT_ID="-35" ORG_UNIT_ID="[NULL]" IS_APPROVED="F" LABEL="2008" PUBLISHED_DATE="2008-05-06 10:09:37.0" STATUS="PENDING" EXPIRY_DATE="[NULL]" LAST_MODIFIED_DATE="2008-05-06 10:09:37.0" ACTION_REQUIRED="APPROVE" ACTION_GROUP="MANAGER" CORPORATE_OBJECTIVE_ID="1" APPEAR_TODO="F"/>

    <OBJECTIVES NODE_ID="2" LABEL="# Corp Goal 1" STATUS="OPEN"
                DESCRIPTION="Welcome to QuickTest Professional, the Mercury automated keyword-driven testing solution. By mirroring end-user behavior, QuickTest Professional creates interactive customizable tests or components that simplify and shorten the testing cycle.
QuickTest Professional enables you to test standard Windows applications, Web objects, ActiveX controls, and Visual Basic applications. You can also acquire additional QuickTest add-ins for a number of special environments, such as Java, Oracle, SAP Solutions, .NET Windows and Web Forms, Siebel, PeopleSoft, Web services, and terminal emulator applications." OBJECTIVE_SET_ID="1" DATE_CREATED="2008-05-02 14:59:36.0" DATE_UPDATED="2008-05-02 15:03:51.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="3" LABEL="A Better C 2" STATUS="OPEN"
                DESCRIPTION="You get an instant win even if you continue to write C code because C++ has closed many holes in the C language and provides better type checking and compile-time analysis. YouÂ’re forced to declare functions so that the compiler can check their use. The need for the preprocessor has virtually been eliminated for value substitution and macros, which removes a set of difficult-to-find bugs. C++ has a feature called references that allows more convenient handling of addresses for function arguments and return values. The handling of names is improved through a feature called function overloading, which allows you to use the same name for different functions. A feature called namespaces also improves the control of names. There are numerous smaller features that improve the safety of C." OBJECTIVE_SET_ID="1" DATE_CREATED="2008-05-02 14:59:36.0" DATE_UPDATED="2008-05-02 15:03:51.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="4" LABEL="Efficiency 3" STATUS="OPEN" DESCRIPTION="Sometimes it is appropriate to trade execution speed for programmer productivity. A financial model, for example, may be useful for only a short period of time, so itÂ’s more important to create the model rapidly than to execute it rapidly. However, most applications require some degree of efficiency, so C++ always errs on the side of greater efficiency. Because C programmers tend to be very efficiency-conscious, this is also a way to ensure that they wonÂ’t be able to argue that the language is too fat and slow. A number of features in C++ are intended to allow you to tune for performance when the generated code isnÂ’t efficient enough" OBJECTIVE_SET_ID="1" DATE_CREATED="2008-05-02 14:59:36.0" DATE_UPDATED="2008-05-02 15:03:51.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="5" LABEL="Error handling 4" STATUS="OPEN"
                DESCRIPTION="Error handling in C is a notorious problem, and one that is often ignored Â– finger-crossing is usually involved. If youÂ’re building a large, complex program, thereÂ’s nothing worse than having an error buried somewhere with no clue as to where it came from. C++ exception handling (introduced in this Volume, and fully covered in Volume 2, which is downloadable from www.BruceEckel.com) is a way to guarantee that an error is noticed and that something happens as a result." OBJECTIVE_SET_ID="1" DATE_CREATED="2008-05-02 14:59:36.0" DATE_UPDATED="2008-05-02 15:03:51.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="6" LABEL="1. Training" STATUS="OPEN" DESCRIPTION="The first step is some form of education. Remember the companyÂ’s investment in plain C code, and try not to throw everything into disarray for six to nine months while everyone puzzles over how multiple inheritance works. Pick a small group for indoctrination, preferably one composed of people who are curious, work well together, and can function as their own support network while theyÂ’re learning C++." OBJECTIVE_SET_ID="2" DATE_CREATED="2008-05-02 15:01:33.0" DATE_UPDATED="2008-05-02 15:01:33.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="7" LABEL="2. Low-risk project" STATUS="OPEN" DESCRIPTION="Try a low-risk project first and allow for mistakes. Once youÂ’ve gained some experience, you can either seed other projects from members of this first team or use the team members as an OOP technical support staff. This first project may not work right the first time, so it should not be mission-critical for the company. It should be simple, self-contained, and instructive; this means that it should involve creating classes that will be meaningful to the other programmers in the company when they get their turn to learn C++." OBJECTIVE_SET_ID="2" DATE_CREATED="2008-05-02 15:01:33.0" DATE_UPDATED="2008-05-02 15:01:33.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="8" LABEL="3. Model from success" STATUS="OPEN" DESCRIPTION="Seek out examples of good object-oriented design before starting from scratch. ThereÂ’s a good probability that someone has solved your problem already, and if they havenÂ’t solved it exactly you can probably apply what youÂ’ve learned about abstraction to modify an existing design to fit your needs. This is the general concept of design patterns, covered in Volume 2." OBJECTIVE_SET_ID="2" DATE_CREATED="2008-05-02 15:01:33.0" DATE_UPDATED="2008-05-02 15:01:33.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="9" LABEL="4. Use existing class libraries" STATUS="OPEN" DESCRIPTION="The primary economic motivation for switching to OOP is the easy use of existing code in the form of class libraries (in particular, the Standard C++ libraries, which are covered in depth in Volume two of this book). The shortest application development cycle will result when you donÂ’t have to write anything but main( ), creating and using objects from off-the-shelf libraries. However, some new programmers donÂ’t understand this, are unaware of existing class libraries, or, through fascination with the language, desire to write classes that may already exist. Your success with OOP and C++ will be optimized if you make an effort to seek out and reuse other peopleÂ’s code early in the transition process" OBJECTIVE_SET_ID="2" DATE_CREATED="2008-05-02 15:01:33.0" DATE_UPDATED="2008-05-02 15:01:33.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="[NULL]" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="12" LABEL="Default OU Efficiency" STATUS="OPEN" DESCRIPTION="As mentioned earlier, the number that is most often given for the difference in size and speed between C and C++ is Â±10%, and often much closer to par. You might even get a significant improvement in size and speed when using C++ rather than C because the design you make for C++ could be quite different from the one youÂ’d make for C" OBJECTIVE_SET_ID="3" DATE_CREATED="2008-05-02 15:41:23.0" DATE_UPDATED="2008-05-02 15:41:23.0" DATE_APPROVED="[NULL]" CREATED_BY="1" UPDATED_BY="1" PARENT_ID="4" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="13" LABEL="Save 5000 off budget" STATUS="OPEN" DESCRIPTION="OOP and C++ may not be for everyone. ItÂ’s important to evaluate your own needs and decide whether C++ will optimally satisfy those needs, or if you might be better off with another programming system (including the one youÂ’re currently using). If you know that your needs will be very specialized for the foreseeable future and if you have specific constraints that may not be satisfied by C++, then you owe it to yourself to investigate the alternatives[24]. Even if you eventually choose C++ as your language, youÂ’ll at least understand what the options were and have a clear vision of why you took that direction." OBJECTIVE_SET_ID="4" DATE_CREATED="2008-05-02 15:51:05.0" DATE_UPDATED="2008-05-02 15:51:05.0" DATE_APPROVED="[NULL]" CREATED_BY="-132" UPDATED_BY="-132" PARENT_ID="4" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="14" LABEL="Sell 500 more C units" STATUS="APPROVED" DESCRIPTION="Whenever you run a program, it is first loaded (typically from disk) into the computerÂ’s memory. Thus, all elements of your program are located somewhere in memory. Memory is typically laid out as a sequential series of memory locations; we usually refer to these locations as eight-bit bytes but actually the size of each space depends on the architecture of the particular machine and is usually called that machineÂ’s word size." OBJECTIVE_SET_ID="5" DATE_CREATED="2008-05-02 15:53:21.0" DATE_UPDATED="2008-05-02 15:53:30.0" DATE_APPROVED="2008-05-02 15:53:30.0" CREATED_BY="-132" UPDATED_BY="-132" PARENT_ID="3" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="15" LABEL="Daniel # Goal 1" STATUS="APPROVED" DESCRIPTION="The results of this program will vary depending on your computer, OS, and all sorts of other factors, but it will always give you some interesting insights. For a single run on my computer, the results looked like this" OBJECTIVE_SET_ID="6" DATE_CREATED="2008-05-06 09:56:30.0" DATE_UPDATED="2008-05-06 10:04:27.0" DATE_APPROVED="2008-05-06 09:59:43.0" CREATED_BY="-132" UPDATED_BY="-132" PARENT_ID="14" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="16" LABEL="Daniel # Goal 2" STATUS="APPROVED" DESCRIPTION="You can see how the variables that are defined inside main( ) are in a different area than the variables defined outside of main( ); youÂ’ll understand why as you learn more about the language. Also, f( ) appears to be in its own area; code is typically separated from data in memory" OBJECTIVE_SET_ID="6" DATE_CREATED="2008-05-06 09:58:35.0" DATE_UPDATED="2008-05-06 10:04:27.0" DATE_APPROVED="2008-05-06 09:59:43.0" CREATED_BY="-133" UPDATED_BY="-132" PARENT_ID="14" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="17" LABEL="More Coding" STATUS="APPROVED" DESCRIPTION="Other than this interesting experiment showing how memory is mapped out, what can you do with an address? The most important thing you can do is store it inside another variable for later use. C and C++ have a special type of variable that holds an address. This variable is called a pointer." OBJECTIVE_SET_ID="7" DATE_CREATED="2008-05-06 10:08:38.0" DATE_UPDATED="2008-05-06 10:08:38.0" DATE_APPROVED="2008-05-06 10:08:38.0" CREATED_BY="-132" UPDATED_BY="-132" PARENT_ID="4" APPEAR_TODO="F"/>
    <OBJECTIVES NODE_ID="18" LABEL="Agatha Goal #1" STATUS="OPEN" DESCRIPTION="C syntax (and by inheritance, C++ syntax) does not allow such sensible expressions. In the definitions above, only ipa is a pointer, but ipb and ipc are ordinary ints (you can say that Â“* binds more tightly to the identifierÂ”). Consequently, the best results can be achieved by using only one definition per line; you still get the sensible syntax without the confusion" OBJECTIVE_SET_ID="8" DATE_CREATED="2008-05-06 10:09:37.0" DATE_UPDATED="2008-05-06 10:09:37.0" DATE_APPROVED="[NULL]" CREATED_BY="-132" UPDATED_BY="-132" PARENT_ID="17" APPEAR_TODO="F"/>
    <NODE_DAS ID="50" NODE_ID="15" DA_ID="48" VALUE="25" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="51" NODE_ID="15" DA_ID="46" VALUE="413" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="52" NODE_ID="15" DA_ID="47" VALUE="415" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="53" NODE_ID="15" DA_ID="45" VALUE="410" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="54" NODE_ID="16" DA_ID="45" VALUE="410" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="55" NODE_ID="16" DA_ID="46" VALUE="412" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="56" NODE_ID="16" DA_ID="47" VALUE="415" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="57" NODE_ID="16" DA_ID="48" VALUE="25" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="58" NODE_ID="18" DA_ID="45" VALUE="410" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="59" NODE_ID="18" DA_ID="46" VALUE="412" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="60" NODE_ID="18" DA_ID="48" VALUE="35" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <NODE_DAS ID="61" NODE_ID="18" DA_ID="47" VALUE="415" DYNAMIC_POSITION="[NULL]" ADDED_BY="[NULL]" DATE_ADDED="[NULL]" DISABLED="F"/>
    <OBJECTIVE_ASSESSMENTS ID="1" SELF_COMMENTS="[NULL]" MANAGER_COMMENTS="Testing review for goal 1" IS_APPROVED="F" OBJECTIVE_ID="15" SELF_RATING_ID="[NULL]" MANAGER_RATING_ID="421" ASSESSED_BY_ID="[NULL]" DATE_APPROVED="[NULL]"/>
    <OBJECTIVE_ASSESSMENTS ID="2" SELF_COMMENTS="[NULL]" MANAGER_COMMENTS="Manager assessment for Daniel Goal 2" IS_APPROVED="F" OBJECTIVE_ID="16" SELF_RATING_ID="[NULL]" MANAGER_RATING_ID="420" ASSESSED_BY_ID="[NULL]" DATE_APPROVED="[NULL]"/>
    <OBJECTIVE_ASSESSMENTS ID="3" SELF_COMMENTS="Agatha&apos;s comments on Daniels Goal" MANAGER_COMMENTS="[NULL]" IS_APPROVED="F" OBJECTIVE_ID="16" SELF_RATING_ID="422" MANAGER_RATING_ID="[NULL]" ASSESSED_BY_ID="-135" DATE_APPROVED="[NULL]"/>
    <OBJECTIVE_ASSESSORS USER_ID="-134" OBJECTIVE_ID="15"/>
    <OBJECTIVE_ASSESSORS USER_ID="-135" OBJECTIVE_ID="16"/>
</dataset>
